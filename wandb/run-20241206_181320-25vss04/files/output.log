
 10%|██████████▌                                                                                               | 4001/40080 [00:00<00:07, 4797.38it/s][INFO|trainer.py:3614] 2024-12-06 18:13:29,102 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:13:29,103 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:13:29,103 >>   Batch size = 8






100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:11<00:00,  4.32it/s]
Computing accuracy for k=10: 0.8063725490196079
Computing accuracy for k=11: 0.8137254901960784
Computing accuracy for k=12: 0.803921568627451
Computing accuracy for k=13: 0.8112745098039216
Computing accuracy for k=14: 0.8088235294117647
Computing accuracy for k=15: 0.8088235294117647
Computing accuracy for k=16: 0.8088235294117647
Computing accuracy for k=17: 0.8063725490196079
Computing accuracy for k=18: 0.8112745098039216
Computing accuracy for k=19: 0.8088235294117647
Computing accuracy for k=20: 0.8161764705882353
Computing accuracy for k=21: 0.8186274509803921
Computing accuracy for k=22: 0.8186274509803921
Computing accuracy for k=23: 0.8137254901960784
Computing accuracy for k=24: 0.821078431372549

Computing accuracy for k=25: 0.821078431372549
{'accuracy': 0.821078431372549, 'f1': 0.8781302170283807, 'combined_score': 0.8496043242004648, 'accuracy_10': 0.8063725490196079, 'accuracy_11': 0.8137254901960784, 'accuracy_12': 0.803921568627451, 'accuracy_13': 0.8112745098039216, 'accuracy_14': 0.8088235294117647, 'accuracy_15': 0.8088235294117647, 'accuracy_16': 0.8088235294117647, 'accuracy_17': 0.8063725490196079, 'accuracy_18': 0.8112745098039216, 'accuracy_19': 0.8088235294117647, 'accuracy_20': 0.8161764705882353, 'accuracy_21': 0.8186274509803921, 'accuracy_22': 0.8186274509803921, 'accuracy_23': 0.8137254901960784, 'accuracy_24': 0.821078431372549, 'accuracy_25': 0.821078431372549}

 10%|██████████▊                                                                                                 | 4010/40080 [03:31<45:11, 13.30it/s]



 10%|██████████▉                                                                                                 | 4040/40080 [03:53<49:39, 12.10it/s]


 10%|██████████▋                                                                                               | 4060/40080 [04:08<1:00:03,  9.99it/s]


 10%|██████████▊                                                                                               | 4066/40080 [04:12<1:24:20,  7.12it/s]



 10%|██████████▊                                                                                               | 4100/40080 [04:37<1:57:32,  5.10it/s]

 10%|██████████▊                                                                                               | 4106/40080 [04:42<2:59:31,  3.34it/s]




 10%|██████████▉                                                                                               | 4140/40080 [05:07<4:55:58,  2.02it/s]
 10%|██████████▉                                                                                               | 4140/40080 [05:07<4:55:58,  2.02it/s]Traceback (most recent call last):
  File "my_experiments/tasks/task1/rank_dropout.py", line 1118, in <module>
    main()
  File "my_experiments/tasks/task1/rank_dropout.py", line 1007, in main
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 1859, in train
    return inner_training_loop(
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 2205, in _inner_training_loop
    if (
KeyboardInterrupt