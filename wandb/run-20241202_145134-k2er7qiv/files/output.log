







  0%|                                                                                                                  | 21/21420 [00:15<4:25:36,  1.34it/s]







  0%|▏                                                                                                                 | 40/21420 [00:29<4:28:19,  1.33it/s]








  0%|▎                                                                                                                 | 61/21420 [00:45<4:29:48,  1.32it/s]







  0%|▍                                                                                                                 | 80/21420 [01:00<4:28:57,  1.32it/s]








  0%|▌                                                                                                                | 100/21420 [01:15<4:28:19,  1.32it/s]







  1%|▋                                                                                                                | 119/21420 [01:29<4:28:33,  1.32it/s]








  1%|▋                                                                                                                | 140/21420 [01:45<4:28:09,  1.32it/s]







  1%|▊                                                                                                                | 159/21420 [01:59<4:28:13,  1.32it/s]








  1%|▉                                                                                                                | 180/21420 [02:15<4:28:59,  1.32it/s]







  1%|█                                                                                                                | 198/21420 [02:29<4:27:07,  1.32it/s]








  1%|█▏                                                                                                               | 219/21420 [02:45<4:27:40,  1.32it/s]








  1%|█▎                                                                                                               | 241/21420 [03:01<4:27:59,  1.32it/s]







  1%|█▎                                                                                                               | 259/21420 [03:15<4:27:17,  1.32it/s]








  1%|█▍                                                                                                               | 280/21420 [03:31<4:27:06,  1.32it/s]







  1%|█▌                                                                                                               | 299/21420 [03:46<4:26:24,  1.32it/s]


  1%|█▌                                                                                                               | 306/21420 [03:51<4:00:53,  1.46it/s][INFO|trainer.py:786] 2024-12-02 14:55:28,350 >> The following columns in the evaluation set don't have a corresponding argument in `PeftModelForSequenceClassification.forward` and have been ignored: idx, sentence1, sentence2. If idx, sentence1, sentence2 are not expected by `PeftModelForSequenceClassification.forward`,  you can safely ignore this message.
[INFO|trainer.py:3614] 2024-12-02 14:55:28,352 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-02 14:55:28,352 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-02 14:55:28,352 >>   Batch size = 8





 92%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▋         | 47/51 [00:10<00:00,  4.25it/s]






  1%|█▋                                                                                                               | 320/21420 [04:13<4:38:41,  1.26it/s]







  2%|█▊                                                                                                               | 339/21420 [04:28<4:27:13,  1.31it/s]








  2%|█▉                                                                                                               | 360/21420 [04:44<4:26:23,  1.32it/s]








  2%|██                                                                                                               | 381/21420 [05:00<4:26:51,  1.31it/s]







  2%|██                                                                                                               | 399/21420 [05:13<4:25:48,  1.32it/s]








  2%|██▏                                                                                                              | 420/21420 [05:29<4:25:50,  1.32it/s]







  2%|██▎                                                                                                              | 439/21420 [05:44<4:26:42,  1.31it/s]








  2%|██▍                                                                                                              | 460/21420 [06:00<4:25:37,  1.32it/s]








  2%|██▌                                                                                                              | 481/21420 [06:16<4:25:38,  1.31it/s]







  2%|██▋                                                                                                              | 499/21420 [06:29<4:24:51,  1.32it/s]








  2%|██▋                                                                                                              | 520/21420 [06:45<4:24:11,  1.32it/s]







  3%|██▊                                                                                                              | 539/21420 [07:00<4:26:09,  1.31it/s]








  3%|██▉                                                                                                              | 560/21420 [07:16<4:24:18,  1.32it/s]








  3%|███                                                                                                              | 581/21420 [07:32<4:24:43,  1.31it/s]






  3%|███▏                                                                                                             | 599/21420 [07:45<4:23:46,  1.32it/s]Traceback (most recent call last):
  File "main_glue_from_pretrained.py", line 928, in <module>
    main()
  File "main_glue_from_pretrained.py", line 817, in main
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 1859, in train
    return inner_training_loop(
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 2203, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 3147, in training_step
    self.accelerator.backward(loss)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/accelerate/accelerator.py", line 1966, in backward
    loss.backward(**kwargs)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt