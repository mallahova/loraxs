
 10%|██████████▌                                                                                               | 4001/40080 [00:00<00:07, 4759.60it/s][INFO|trainer.py:3614] 2024-12-06 18:22:39,645 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:22:39,646 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:22:39,646 >>   Batch size = 8






100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:11<00:00,  4.28it/s]
Computing accuracy for k=10: 0.8063725490196079
Computing accuracy for k=11: 0.8137254901960784

Computing accuracy for k=12: 0.803921568627451
Computing accuracy for k=13: 0.8112745098039216
Computing accuracy for k=14: 0.8088235294117647
Computing accuracy for k=15: 0.8088235294117647
Computing accuracy for k=16: 0.8088235294117647
Computing accuracy for k=17: 0.8063725490196079
Computing accuracy for k=18: 0.8112745098039216
Computing accuracy for k=19: 0.8088235294117647
Computing accuracy for k=20: 0.8161764705882353
Computing accuracy for k=21: 0.8186274509803921
Computing accuracy for k=22: 0.8186274509803921
Computing accuracy for k=23: 0.8137254901960784
Computing accuracy for k=24: 0.821078431372549

Computing accuracy for k=25: 0.821078431372549
{'accuracy': 0.821078431372549, 'f1': 0.8781302170283807, 'combined_score': 0.8496043242004648, 'accuracy_10': 0.8063725490196079, 'accuracy_11': 0.8137254901960784, 'accuracy_12': 0.803921568627451, 'accuracy_13': 0.8112745098039216, 'accuracy_14': 0.8088235294117647, 'accuracy_15': 0.8088235294117647, 'accuracy_16': 0.8088235294117647, 'accuracy_17': 0.8063725490196079, 'accuracy_18': 0.8112745098039216, 'accuracy_19': 0.8088235294117647, 'accuracy_20': 0.8161764705882353, 'accuracy_21': 0.8186274509803921, 'accuracy_22': 0.8186274509803921, 'accuracy_23': 0.8137254901960784, 'accuracy_24': 0.821078431372549, 'accuracy_25': 0.821078431372549}

 10%|██████████▊                                                                                                 | 4010/40080 [03:35<46:10, 13.02it/s]




 10%|██████████▉                                                                                                 | 4040/40080 [03:57<51:23, 11.69it/s]


 10%|██████████▋                                                                                               | 4049/40080 [04:04<1:03:23,  9.47it/s]




 10%|██████████▊                                                                                               | 4080/40080 [04:28<1:24:11,  7.13it/s]


 10%|██████████▊                                                                                               | 4089/40080 [04:34<2:03:27,  4.86it/s]




 10%|██████████▉                                                                                               | 4120/40080 [04:58<2:56:10,  3.40it/s]


 10%|██████████▉                                                                                               | 4140/40080 [05:13<5:00:52,  1.99it/s]


 10%|██████████▉                                                                                               | 4156/40080 [05:25<5:54:39,  1.69it/s]








 10%|███████████                                                                                               | 4180/40080 [05:44<7:29:24,  1.33it/s]








 10%|███████████                                                                                               | 4201/40080 [06:00<7:42:30,  1.29it/s]







 11%|███████████▏                                                                                              | 4219/40080 [06:14<7:47:53,  1.28it/s]








 11%|███████████▏                                                                                              | 4239/40080 [06:30<7:34:50,  1.31it/s]








 11%|███████████▎                                                                                              | 4260/40080 [06:46<7:34:41,  1.31it/s]







 11%|███████████▎                                                                                              | 4279/40080 [07:00<7:25:31,  1.34it/s]








 11%|███████████▎                                                                                              | 4300/40080 [07:16<7:36:17,  1.31it/s]







 11%|███████████▍                                                                                              | 4319/40080 [07:30<7:32:55,  1.32it/s]








 11%|███████████▍                                                                                              | 4340/40080 [07:46<7:34:40,  1.31it/s]
 11%|███████████▍                                                                                              | 4342/40080 [07:47<6:24:29,  1.55it/s][INFO|trainer.py:3614] 2024-12-06 18:30:21,932 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:30:21,932 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:30:21,933 >>   Batch size = 8






100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:12<00:00,  4.10it/s]
Computing accuracy for k=10: 0.7671568627450981
Computing accuracy for k=11: 0.7720588235294118
Computing accuracy for k=12: 0.7671568627450981
Computing accuracy for k=13: 0.7720588235294118
Computing accuracy for k=14: 0.7696078431372549
Computing accuracy for k=15: 0.7696078431372549
Computing accuracy for k=16: 0.7671568627450981
Computing accuracy for k=17: 0.7671568627450981
Computing accuracy for k=18: 0.7720588235294118
Computing accuracy for k=19: 0.7745098039215687
Computing accuracy for k=20: 0.7696078431372549
Computing accuracy for k=21: 0.7696078431372549
Computing accuracy for k=22: 0.7745098039215687
Computing accuracy for k=23: 0.7745098039215687
Computing accuracy for k=24: 0.7720588235294118

Computing accuracy for k=25: 0.7720588235294118
{'accuracy': 0.7720588235294118, 'f1': 0.8535433070866142, 'combined_score': 0.812801065308013, 'accuracy_10': 0.7671568627450981, 'accuracy_11': 0.7720588235294118, 'accuracy_12': 0.7671568627450981, 'accuracy_13': 0.7720588235294118, 'accuracy_14': 0.7696078431372549, 'accuracy_15': 0.7696078431372549, 'accuracy_16': 0.7671568627450981, 'accuracy_17': 0.7671568627450981, 'accuracy_18': 0.7720588235294118, 'accuracy_19': 0.7745098039215687, 'accuracy_20': 0.7696078431372549, 'accuracy_21': 0.7696078431372549, 'accuracy_22': 0.7745098039215687, 'accuracy_23': 0.7745098039215687, 'accuracy_24': 0.7720588235294118, 'accuracy_25': 0.7720588235294118}







 11%|███████████▌                                                                                              | 4361/40080 [11:42<8:31:36,  1.16it/s]







 11%|███████████▌                                                                                              | 4379/40080 [11:56<7:27:43,  1.33it/s]








 11%|███████████▋                                                                                              | 4401/40080 [12:13<7:30:38,  1.32it/s]







 11%|███████████▋                                                                                              | 4419/40080 [12:26<7:28:42,  1.32it/s]








 11%|███████████▋                                                                                              | 4440/40080 [12:42<7:33:55,  1.31it/s]







 11%|███████████▊                                                                                              | 4459/40080 [12:57<7:23:31,  1.34it/s]








 11%|███████████▊                                                                                              | 4480/40080 [13:12<7:34:10,  1.31it/s]







 11%|███████████▉                                                                                              | 4498/40080 [13:26<7:23:33,  1.34it/s]








 11%|███████████▉                                                                                              | 4520/40080 [13:43<7:34:49,  1.30it/s]








 11%|████████████                                                                                              | 4541/40080 [13:59<7:26:45,  1.33it/s]







 11%|████████████                                                                                              | 4559/40080 [14:12<7:29:08,  1.32it/s]








 11%|████████████                                                                                              | 4581/40080 [14:29<7:26:40,  1.32it/s]







 11%|████████████▏                                                                                             | 4599/40080 [14:42<7:28:46,  1.32it/s]








 12%|████████████▏                                                                                             | 4620/40080 [14:59<7:36:33,  1.29it/s]








 12%|████████████▎                                                                                             | 4641/40080 [15:15<7:37:23,  1.29it/s]







 12%|████████████▎                                                                                             | 4659/40080 [15:29<7:34:42,  1.30it/s]






 12%|████████████▎                                                                                             | 4676/40080 [15:41<6:19:36,  1.55it/s][INFO|trainer.py:3614] 2024-12-06 18:38:15,920 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:38:15,921 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:38:15,921 >>   Batch size = 8






100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:12<00:00,  4.02it/s]
Computing accuracy for k=10: 0.8112745098039216
Computing accuracy for k=11: 0.8112745098039216
Computing accuracy for k=12: 0.8088235294117647
Computing accuracy for k=13: 0.8137254901960784
Computing accuracy for k=14: 0.8137254901960784
Computing accuracy for k=15: 0.8137254901960784
Computing accuracy for k=16: 0.8112745098039216

Computing accuracy for k=17: 0.8088235294117647
Computing accuracy for k=18: 0.8063725490196079
Computing accuracy for k=19: 0.8112745098039216
Computing accuracy for k=20: 0.8137254901960784
Computing accuracy for k=21: 0.8186274509803921
Computing accuracy for k=22: 0.8112745098039216
Computing accuracy for k=23: 0.821078431372549
Computing accuracy for k=24: 0.8161764705882353
Computing accuracy for k=25: 0.821078431372549
{'accuracy': 0.821078431372549, 'f1': 0.8773109243697478, 'combined_score': 0.8491946778711483, 'accuracy_10': 0.8112745098039216, 'accuracy_11': 0.8112745098039216, 'accuracy_12': 0.8088235294117647, 'accuracy_13': 0.8137254901960784, 'accuracy_14': 0.8137254901960784, 'accuracy_15': 0.8137254901960784, 'accuracy_16': 0.8112745098039216, 'accuracy_17': 0.8088235294117647, 'accuracy_18': 0.8063725490196079, 'accuracy_19': 0.8112745098039216, 'accuracy_20': 0.8137254901960784, 'accuracy_21': 0.8186274509803921, 'accuracy_22': 0.8112745098039216, 'accuracy_23': 0.821078431372549, 'accuracy_24': 0.8161764705882353, 'accuracy_25': 0.821078431372549}


 12%|████████████▏                                                                                           | 4680/40080 [19:25<230:28:39, 23.44s/it]








 12%|████████████▍                                                                                             | 4701/40080 [19:41<7:39:48,  1.28it/s]







 12%|████████████▍                                                                                             | 4719/40080 [19:55<7:29:20,  1.31it/s]








 12%|████████████▌                                                                                             | 4740/40080 [20:11<7:23:11,  1.33it/s]







 12%|████████████▌                                                                                             | 4759/40080 [20:25<7:30:37,  1.31it/s]








 12%|████████████▋                                                                                             | 4780/40080 [20:41<7:28:38,  1.31it/s]








 12%|████████████▋                                                                                             | 4801/40080 [20:57<7:29:11,  1.31it/s]







 12%|████████████▋                                                                                             | 4819/40080 [21:11<7:31:21,  1.30it/s]








 12%|████████████▊                                                                                             | 4840/40080 [21:27<7:35:01,  1.29it/s]








 12%|████████████▊                                                                                             | 4861/40080 [21:43<7:25:15,  1.32it/s]







 12%|████████████▉                                                                                             | 4879/40080 [21:57<7:39:26,  1.28it/s]








 12%|████████████▉                                                                                             | 4900/40080 [22:13<7:38:55,  1.28it/s]








 12%|█████████████                                                                                             | 4920/40080 [22:29<7:38:48,  1.28it/s]








 12%|█████████████                                                                                             | 4941/40080 [22:45<7:30:46,  1.30it/s]







 12%|█████████████                                                                                             | 4959/40080 [22:59<7:30:40,  1.30it/s]








 12%|█████████████▏                                                                                            | 4980/40080 [23:15<7:28:40,  1.30it/s]








 12%|█████████████▏                                                                                            | 5001/40080 [23:31<7:22:29,  1.32it/s]



 12%|█████████████▎                                                                                            | 5010/40080 [23:38<6:13:44,  1.56it/s][INFO|trainer.py:3614] 2024-12-06 18:46:12,491 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:46:12,491 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:46:12,491 >>   Batch size = 8






100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:12<00:00,  3.82it/s]
Computing accuracy for k=10: 0.7990196078431373
Computing accuracy for k=11: 0.7990196078431373
Computing accuracy for k=12: 0.7990196078431373
Computing accuracy for k=13: 0.7965686274509803
Computing accuracy for k=14: 0.7990196078431373
Computing accuracy for k=15: 0.7916666666666666
Computing accuracy for k=16: 0.7916666666666666
Computing accuracy for k=17: 0.7941176470588235
Computing accuracy for k=18: 0.7965686274509803
Computing accuracy for k=19: 0.7965686274509803
Computing accuracy for k=20: 0.7965686274509803
Computing accuracy for k=21: 0.7990196078431373
Computing accuracy for k=22: 0.8014705882352942
Computing accuracy for k=23: 0.8014705882352942
Computing accuracy for k=24: 0.8014705882352942

Computing accuracy for k=25: 0.8014705882352942
{'accuracy': 0.8014705882352942, 'f1': 0.8687196110210698, 'combined_score': 0.835095099628182, 'accuracy_10': 0.7990196078431373, 'accuracy_11': 0.7990196078431373, 'accuracy_12': 0.7990196078431373, 'accuracy_13': 0.7965686274509803, 'accuracy_14': 0.7990196078431373, 'accuracy_15': 0.7916666666666666, 'accuracy_16': 0.7916666666666666, 'accuracy_17': 0.7941176470588235, 'accuracy_18': 0.7965686274509803, 'accuracy_19': 0.7965686274509803, 'accuracy_20': 0.7965686274509803, 'accuracy_21': 0.7990196078431373, 'accuracy_22': 0.8014705882352942, 'accuracy_23': 0.8014705882352942, 'accuracy_24': 0.8014705882352942, 'accuracy_25': 0.8014705882352942}




 13%|█████████████▏                                                                                           | 5020/40080 [27:32<34:21:15,  3.53s/it]








 13%|█████████████▎                                                                                            | 5040/40080 [27:47<7:40:04,  1.27it/s]








 13%|█████████████▍                                                                                            | 5060/40080 [28:03<7:34:30,  1.28it/s]








 13%|█████████████▍                                                                                            | 5081/40080 [28:20<7:37:01,  1.28it/s]








 13%|█████████████▍                                                                                            | 5101/40080 [28:35<7:28:15,  1.30it/s]







 13%|█████████████▌                                                                                            | 5119/40080 [28:49<7:26:42,  1.30it/s]








 13%|█████████████▌                                                                                            | 5140/40080 [29:05<7:27:36,  1.30it/s]








 13%|█████████████▋                                                                                            | 5161/40080 [29:21<7:21:38,  1.32it/s]







 13%|█████████████▋                                                                                            | 5179/40080 [29:35<7:28:37,  1.30it/s]








 13%|█████████████▊                                                                                            | 5200/40080 [29:51<7:22:55,  1.31it/s]








 13%|█████████████▊                                                                                            | 5221/40080 [30:08<7:30:28,  1.29it/s]







 13%|█████████████▊                                                                                            | 5239/40080 [30:22<7:32:45,  1.28it/s]








 13%|█████████████▉                                                                                            | 5260/40080 [30:38<7:20:13,  1.32it/s]








 13%|█████████████▉                                                                                            | 5281/40080 [30:54<7:23:02,  1.31it/s]








 13%|██████████████                                                                                            | 5301/40080 [31:09<7:29:04,  1.29it/s]







 13%|██████████████                                                                                            | 5320/40080 [31:24<7:20:51,  1.31it/s]








 13%|██████████████▏                                                                                           | 5341/40080 [31:40<7:22:06,  1.31it/s]
 13%|██████████████▏                                                                                           | 5344/40080 [31:42<6:10:44,  1.56it/s][INFO|trainer.py:3614] 2024-12-06 18:54:16,537 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 18:54:16,537 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 18:54:16,537 >>   Batch size = 8







100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:13<00:00,  3.83it/s]
Computing accuracy for k=10: 0.8284313725490197
Computing accuracy for k=11: 0.8308823529411765
Computing accuracy for k=12: 0.8259803921568627
Computing accuracy for k=13: 0.8259803921568627
Computing accuracy for k=14: 0.8284313725490197
Computing accuracy for k=15: 0.8284313725490197
Computing accuracy for k=16: 0.8259803921568627
Computing accuracy for k=17: 0.8284313725490197
Computing accuracy for k=18: 0.8259803921568627
Computing accuracy for k=19: 0.8333333333333334
Computing accuracy for k=20: 0.8259803921568627
Computing accuracy for k=21: 0.8284313725490197
Computing accuracy for k=22: 0.8308823529411765
Computing accuracy for k=23: 0.8357843137254902
Computing accuracy for k=24: 0.8308823529411765
Computing accuracy for k=25: 0.8357843137254902
{'accuracy': 0.8382352941176471, 'f1': 0.888135593220339, 'combined_score': 0.863185443668993, 'accuracy_10': 0.8284313725490197, 'accuracy_11': 0.8308823529411765, 'accuracy_12': 0.8259803921568627, 'accuracy_13': 0.8259803921568627, 'accuracy_14': 0.8284313725490197, 'accuracy_15': 0.8284313725490197, 'accuracy_16': 0.8259803921568627, 'accuracy_17': 0.8284313725490197, 'accuracy_18': 0.8259803921568627, 'accuracy_19': 0.8333333333333334, 'accuracy_20': 0.8259803921568627, 'accuracy_21': 0.8284313725490197, 'accuracy_22': 0.8308823529411765, 'accuracy_23': 0.8357843137254902, 'accuracy_24': 0.8308823529411765, 'accuracy_25': 0.8357843137254902}







 13%|██████████████▏                                                                                           | 5361/40080 [35:40<9:31:09,  1.01it/s]







 13%|██████████████▏                                                                                           | 5380/40080 [35:54<7:29:39,  1.29it/s]








 13%|██████████████▎                                                                                           | 5400/40080 [36:10<7:29:53,  1.28it/s]








 14%|██████████████▎                                                                                           | 5421/40080 [36:26<7:25:00,  1.30it/s]








 14%|██████████████▍                                                                                           | 5442/40080 [36:43<7:26:45,  1.29it/s]







 14%|██████████████▍                                                                                           | 5460/40080 [36:57<7:27:54,  1.29it/s]








 14%|██████████████▍                                                                                           | 5480/40080 [37:12<7:29:47,  1.28it/s]








 14%|██████████████▌                                                                                           | 5501/40080 [37:28<7:17:58,  1.32it/s]







 14%|██████████████▌                                                                                           | 5519/40080 [37:42<7:22:58,  1.30it/s]








 14%|██████████████▋                                                                                           | 5540/40080 [37:58<7:19:13,  1.31it/s]








 14%|██████████████▋                                                                                           | 5561/40080 [38:14<7:21:07,  1.30it/s]







 14%|██████████████▊                                                                                           | 5579/40080 [38:28<7:19:34,  1.31it/s]








 14%|██████████████▊                                                                                           | 5600/40080 [38:44<7:16:05,  1.32it/s]








 14%|██████████████▊                                                                                           | 5621/40080 [39:00<7:18:45,  1.31it/s]







 14%|██████████████▉                                                                                           | 5640/40080 [39:15<7:17:07,  1.31it/s]








 14%|██████████████▉                                                                                           | 5660/40080 [39:30<7:29:06,  1.28it/s]






 14%|███████████████                                                                                           | 5678/40080 [39:44<6:25:11,  1.49it/s][INFO|trainer.py:3614] 2024-12-06 19:02:18,682 >> ***** Running Evaluation *****
[INFO|trainer.py:3616] 2024-12-06 19:02:18,682 >>   Num examples = 408
[INFO|trainer.py:3619] 2024-12-06 19:02:18,682 >>   Batch size = 8







100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 51/51 [00:13<00:00,  3.83it/s]
Computing accuracy for k=10: 0.8235294117647058
Computing accuracy for k=11: 0.8259803921568627
Computing accuracy for k=12: 0.8284313725490197
Computing accuracy for k=13: 0.8259803921568627
Computing accuracy for k=14: 0.8259803921568627
Computing accuracy for k=15: 0.8308823529411765
Computing accuracy for k=16: 0.8284313725490197
Computing accuracy for k=17: 0.8284313725490197
Computing accuracy for k=18: 0.8284313725490197
Computing accuracy for k=19: 0.8308823529411765
Computing accuracy for k=20: 0.8308823529411765
Computing accuracy for k=21: 0.8308823529411765
Computing accuracy for k=22: 0.8308823529411765
Computing accuracy for k=23: 0.8333333333333334
Computing accuracy for k=24: 0.8308823529411765

Computing accuracy for k=25: 0.8333333333333334
{'accuracy': 0.8333333333333334, 'f1': 0.8859060402684563, 'combined_score': 0.8596196868008948, 'accuracy_10': 0.8235294117647058, 'accuracy_11': 0.8259803921568627, 'accuracy_12': 0.8284313725490197, 'accuracy_13': 0.8259803921568627, 'accuracy_14': 0.8259803921568627, 'accuracy_15': 0.8308823529411765, 'accuracy_16': 0.8284313725490197, 'accuracy_17': 0.8284313725490197, 'accuracy_18': 0.8284313725490197, 'accuracy_19': 0.8308823529411765, 'accuracy_20': 0.8308823529411765, 'accuracy_21': 0.8308823529411765, 'accuracy_22': 0.8308823529411765, 'accuracy_23': 0.8333333333333334, 'accuracy_24': 0.8308823529411765, 'accuracy_25': 0.8333333333333334}

 14%|██████████████▋                                                                                         | 5681/40080 [43:31<322:54:54, 33.79s/it]







 14%|███████████████                                                                                           | 5697/40080 [43:44<9:00:23,  1.06it/s]









 14%|███████████████▏                                                                                          | 5719/40080 [44:03<7:40:23,  1.24it/s]








 14%|███████████████▏                                                                                          | 5739/40080 [44:19<7:19:30,  1.30it/s]







 14%|███████████████▏                                                                                          | 5758/40080 [44:34<7:22:25,  1.29it/s]








 14%|███████████████▎                                                                                          | 5779/40080 [44:50<7:08:42,  1.33it/s]







 14%|███████████████▎                                                                                          | 5797/40080 [45:03<7:06:49,  1.34it/s]








 15%|███████████████▍                                                                                          | 5819/40080 [45:20<7:14:17,  1.31it/s]








 15%|███████████████▍                                                                                          | 5840/40080 [45:36<7:17:57,  1.30it/s]







 15%|███████████████▍                                                                                          | 5858/40080 [45:49<7:18:03,  1.30it/s]








 15%|███████████████▌                                                                                          | 5878/40080 [46:05<7:24:19,  1.28it/s]








 15%|███████████████▌                                                                                          | 5899/40080 [46:21<7:15:16,  1.31it/s]







 15%|███████████████▋                                                                                          | 5917/40080 [46:35<7:21:51,  1.29it/s]








 15%|███████████████▋                                                                                          | 5938/40080 [46:51<7:22:55,  1.28it/s]








 15%|███████████████▊                                                                                          | 5959/40080 [47:08<7:17:31,  1.30it/s]








 15%|███████████████▊                                                                                          | 5980/40080 [47:24<7:10:07,  1.32it/s]







 15%|███████████████▊                                                                                          | 5998/40080 [47:37<7:19:01,  1.29it/s]

 15%|███████████████▊                                                                                          | 6000/40080 [47:39<7:16:17,  1.30it/s][INFO|trainer.py:3305] 2024-12-06 19:10:13,729 >> Saving model checkpoint to results_mrpc_25/roberta-large/mrpc/pretrained_LoRA_init_svd_rank_25_lr_0.0001_clsLR_0.0001_seed_0/2024-12-06T11:45:03-43/checkpoint-6000
[INFO|configuration_utils.py:726] 2024-12-06 19:10:15,410 >> loading configuration file config.json from cache at /home/mallahova/.cache/huggingface/hub/models--roberta-large/snapshots/722cf37b1afa9454edce342e7895e588b6ff1d59/config.json
[INFO|configuration_utils.py:789] 2024-12-06 19:10:15,411 >> Model config RobertaConfig {
  "architectures": [
    "RobertaForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 1024,
  "initializer_range": 0.02,
  "intermediate_size": 4096,
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 16,
  "num_hidden_layers": 24,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "transformers_version": "4.40.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}
[INFO|tokenization_utils_base.py:2488] 2024-12-06 19:10:15,455 >> tokenizer config file saved in results_mrpc_25/roberta-large/mrpc/pretrained_LoRA_init_svd_rank_25_lr_0.0001_clsLR_0.0001_seed_0/2024-12-06T11:45:03-43/checkpoint-6000/tokenizer_config.json
[INFO|tokenization_utils_base.py:2497] 2024-12-06 19:10:15,456 >> Special tokens file saved in results_mrpc_25/roberta-large/mrpc/pretrained_LoRA_init_svd_rank_25_lr_0.0001_clsLR_0.0001_seed_0/2024-12-06T11:45:03-43/checkpoint-6000/special_tokens_map.json


 15%|███████████████▉                                                                                          | 6007/40080 [47:46<7:43:04,  1.23it/s]Traceback (most recent call last):
  File "my_experiments/tasks/task1/rank_dropout.py", line 1118, in <module>
    main()
  File "my_experiments/tasks/task1/rank_dropout.py", line 1007, in main
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 1859, in train
    return inner_training_loop(
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 2203, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/transformers/trainer.py", line 3147, in training_step
    self.accelerator.backward(loss)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/accelerate/accelerator.py", line 1966, in backward
    loss.backward(**kwargs)
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/home/mallahova/miniconda3/envs/loraxs/lib/python3.8/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt